<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="java.lang.Boolean"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.guest.exception.GuestNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Pattern"/>
    <fullyQualifiedTypeName name="io.swagger.annotations.ApiOperation"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.guest.service.GuestService"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.guest.model.Guest"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.guest.repository.GuestRepo"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.inventory.repository.InventoryRepo"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.inventory.service.InventoryService"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.inventory.exception.InventoryNotFoundException"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.inventory.model.Inventory"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.room.repository.RoomRepo"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.room.service.RoomService"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.room.model.Room"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.room.exception.RoomNotFoundExcption"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.room.exception.RoomNotAvailableException"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="org.springframework.test.context.junit.jupiter.SpringExtension"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.staff.repository.StaffRepo"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBean"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.staff.service.StaffService"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Positive"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.staff.model.Staff"/>
    <fullyQualifiedTypeName name="com.deepak.microservices.staff.exception.StaffNotFoundException"/>
</qualifiedTypeNameHistroy>

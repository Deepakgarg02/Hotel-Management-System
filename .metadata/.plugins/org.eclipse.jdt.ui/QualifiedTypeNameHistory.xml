<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.microservice.springsecurity.filter.JwtFilterRequest"/>
    <fullyQualifiedTypeName name="com.microservice.springsecurity.repository.UserRepository"/>
    <fullyQualifiedTypeName name="com.microservice.springsecurity.service.UserService"/>
    <fullyQualifiedTypeName name="com.microservice.springsecurity.utils.JwtUtils"/>
    <fullyQualifiedTypeName name="com.microservice.springsecurity.model.Users"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.DBRef"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="com.deepak.login.jwtsecurity.AuthEntryPointJwtImpl"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="com.deepak.login.jwtsecurity.AuthRequestTokenFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="com.deepak.login.repository.UserRepo"/>
    <fullyQualifiedTypeName name="com.deepak.login.jwtsecurity.JwtUtils"/>
    <fullyQualifiedTypeName name="com.deepak.login.payload.request.Login"/>
    <fullyQualifiedTypeName name="com.deepak.login.payload.response.JwtResponse"/>
    <fullyQualifiedTypeName name="com.deepak.login.payload.request.Signup"/>
    <fullyQualifiedTypeName name="com.deepak.login.payload.response.MessageResponse"/>
    <fullyQualifiedTypeName name="com.deepak.login.model.Users"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.config.EnableMongoRepositories"/>
    <fullyQualifiedTypeName name="com.deepak.login.repository.RoleRepo"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.boot.CommandLineRunner"/>
    <fullyQualifiedTypeName name="com.deepak.login.model.EnumRole"/>
    <fullyQualifiedTypeName name="com.deepak.login.model.Roles"/>
    <fullyQualifiedTypeName name="com.deepak.login.service.UserDetailsImpl"/>
    <fullyQualifiedTypeName name="com.deepak.login.service.UserDetailsServiceImpl"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.HttpClientErrorException.Forbidden"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
</qualifiedTypeNameHistroy>
